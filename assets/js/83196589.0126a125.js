"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[7832],{4835:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"infrastructure/aws/verify-deployment","title":"Verify your AWS Application Deployment","description":"Amazon Kendra","source":"@site/docs/infrastructure/aws/verify-deployment.md","sourceDirName":"infrastructure/aws","slug":"/infrastructure/aws/verify-deployment","permalink":"/docs/infrastructure/aws/verify-deployment","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Verify your AWS Application Deployment"},"sidebar":"aws","previous":{"title":"Common Errors in Stack Deployment","permalink":"/docs/infrastructure/aws/common-errors-in-stack-deployment"},"next":{"title":"IAM Policy for Stack Deployment","permalink":"/docs/infrastructure/aws/iam-policy-for-deployment"}}');var r=t(4848),a=t(8453);const s={title:"Verify your AWS Application Deployment"},i=void 0,c={},l=[{value:"Amazon Kendra",id:"amazon-kendra",level:2},{value:"AWS Lambda",id:"aws-lambda",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"amazon-kendra",children:"Amazon Kendra"}),"\n",(0,r.jsx)(n.p,{children:"A new Kendra index will be created. It will have a data source setup that is pointed at a newly created S3 bucket. You will want to confirm that the data source has synced the documents within the S3 bucket."}),"\n",(0,r.jsx)(n.p,{children:"You can open the Search Console for the new index to test the search."}),"\n",(0,r.jsx)(n.h2,{id:"aws-lambda",children:"AWS Lambda"}),"\n",(0,r.jsx)(n.p,{children:"There will be a new AWS Lambda function on your account."}),"\n",(0,r.jsx)(n.p,{children:"If you want more verbose logging, add the following environment variable to your lambda function:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"STENTOR_LOG_LEVEL=debug\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can configure the following test payload to ensure the lambda is working correctly. This will test connection with OC Studio and that you have the Lex channel configured properly."}),"\n",(0,r.jsx)(n.p,{children:"Test Payload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "messageVersion": "1.0",\n  "invocationSource": "FulfillmentCodeHook",\n  "userId": "userId",\n  "sessionAttributes": {},\n  "bot": {\n    "name": "Test Bot",\n    "alias": "$LATEST",\n    "version": "$LATEST"\n  },\n  "outputDialogMode": "Text",\n  "currentIntent": {\n    "name": "LaunchRequest",\n    "slots": {},\n    "confirmationStatus": "None"\n  }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(6540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);