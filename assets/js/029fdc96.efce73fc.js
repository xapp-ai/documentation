"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[9670],{5700:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"development/api/graphql","title":"GraphQL API","description":"The GraphQL API powers our web application, Studio, and our CLI.  Management of all the resources for an assistant application are done through GraphQL.","source":"@site/docs/development/api/graphql.md","sourceDirName":"development/api","slug":"/development/api/graphql","permalink":"/docs/development/api/graphql","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"GraphQL API"}}');var t=a(4848),p=a(8453);const i={title:"GraphQL API"},o=void 0,s={},l=[{value:"GraphQL",id:"graphql",level:2},{value:"API Documentation",id:"api-documentation",level:2},{value:"Helpful Queries",id:"helpful-queries",level:2},{value:"App Events",id:"app-events",level:3},{value:"App Errors",id:"app-errors",level:3},{value:"Exporting an App",id:"exporting-an-app",level:3},{value:"Importing an App",id:"importing-an-app",level:3},{value:"Creating a New App",id:"creating-a-new-app",level:3},{value:"Uploading PDFs to Knowledgebase",id:"uploading-pdfs-to-knowledgebase",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,p.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The GraphQL API powers our web application, Studio, and our ",(0,t.jsx)(n.a,{href:"/docs/development/cli",children:"CLI"}),".  Management of all the resources for an assistant application are done through GraphQL."]}),"\n",(0,t.jsx)(n.h2,{id:"graphql",children:"GraphQL"}),"\n",(0,t.jsxs)(n.p,{children:["The API can be found at ",(0,t.jsx)(n.a,{href:"https://api.xapp.ai/graphql",children:"https://api.xapp.ai/graphql"})]}),"\n",(0,t.jsx)(n.p,{children:"Authentication requires adding a header with token:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'{\n    headers: {\n        "Content-Type": "application/json",\n        "x-xapp-usertoken": token\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to programmatically access the API, you can reuse the token used by the ",(0,t.jsx)(n.a,{href:"/docs/development/cli",children:"CLI"}),"'s configuration found at ",(0,t.jsx)(n.code,{children:"~/.xapp/cli_config"})]}),"\n",(0,t.jsx)(n.admonition,{type:"important",children:(0,t.jsx)(n.p,{children:"We currently don't have a way to generate long living machine to machine tokens.  If you want want, please contact your customer support representative."})}),"\n",(0,t.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,t.jsxs)(n.p,{children:["We provide a GraphiQL based UI within Studio at ",(0,t.jsx)(n.a,{href:"https://studio.xapp.ai/graphql",children:"https://studio.xapp.ai/graphql"}),".  Here you can build and test queries as well as access the documentation."]}),"\n",(0,t.jsx)(n.h2,{id:"helpful-queries",children:"Helpful Queries"}),"\n",(0,t.jsx)(n.h3,{id:"app-events",children:"App Events"}),"\n",(0,t.jsx)(n.p,{children:"All app events can be access through the API and various filters can be applied to get exactly what you want.  Here is a starter query:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query events($appId:ID!){\n  app(appId:$appId) {\n    events {\n      total\n      events {\n        userId\n        rawQuery\n      }\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And necessary query variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "appId":""\n}\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"app-errors",children:"App Errors"}),"\n",(0,t.jsx)(n.p,{children:"Stentor has built-in error handling that will capture errors and send them to Studio.  To query them use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:'query errors($appId:ID!){\n  app(appId:$appId) {\n    events(byType:["ERROR"]) {\n      total\n      events {\n        eventTime\n        sessionId\n        userId\n        channel\n        platform\n        errorCode\n        errorMessage\n        payload\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "appId":""\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The above query will give you the 10 most recent errors.  The ",(0,t.jsx)(n.code,{children:"errorMessage"})," contains the error message and the payload is a JSON string that also contains the error message and the stack trace."]}),"\n",(0,t.jsx)(n.h3,{id:"exporting-an-app",children:"Exporting an App"}),"\n",(0,t.jsx)(n.p,{children:"You can programmatically export your application with the following mutation:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"mutation exportApp($appId:ID!, $organizationId:ID!){\n  app(organizationId:$organizationId) {\n    update(appId:$appId) {\n      exportApp {\n        url\n      }\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And query variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "organizationId":"",\n  "appId":""\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The result will contain a URL that has the content of your requested application in JSON format.  This URL is only available temporarily."}),"\n",(0,t.jsx)(n.h3,{id:"importing-an-app",children:"Importing an App"}),"\n",(0,t.jsx)(n.p,{children:"Using the export format from the above app export mutation, you can then import it to an existing organization."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"mutation importApp($organizationId: ID!, $appUrl: URL!) {\n  app(organizationId: $organizationId) {\n    importApp(url: $appUrl) {\n       appId\n      organizationId\n      name\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "appUrl": "https://...",\n  "organizationId": ""\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-new-app",children:"Creating a New App"}),"\n",(0,t.jsx)(n.p,{children:"You can create a new app with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"mutation createApp($input: AppInput) {\n  app {\n    addApp(app:$input){\n      appId\n      organizationId\n      name\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"with variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "input":{\n    "name":"Name of New App",\n    "organizationId": "existing-org-id",\n    "templateType": "OC_STUDIO_STARTER_TEMPLATE"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"name"})," and ",(0,t.jsx)(n.code,{children:"organizationId"})," are the only required input parameters but more can be provided when leveraging this mutation."]}),"\n",(0,t.jsx)(n.h3,{id:"uploading-pdfs-to-knowledgebase",children:"Uploading PDFs to Knowledgebase"}),"\n",(0,t.jsx)(n.p,{children:"This will upload a PDF for a specific appId to the multitenant knowledgebase."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"mutation addPDF($appId:ID!, $url:URL!, $locationId: String, $makePublic: Boolean){\n  app {\n    update(appId:$appId) {\n      addDocumentToKnowledgebase(url:$url, locationId:$locationId, makePublic:$makePublic)\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"with variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "appId": "required",\n  "url":"https://publicly.available.url",\n  "makePublic": true,\n  "locationId": "optional"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"makePublic"})})]})}function c(e={}){const{wrapper:n}={...(0,p.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var r=a(6540);const t={},p=r.createContext(t);function i(e){const n=r.useContext(p);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(p.Provider,{value:n},e.children)}}}]);