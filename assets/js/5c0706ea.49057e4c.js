"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[288],{4152:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"development/starters/oc-studio-starter","title":"OC Studio Starter","description":"Features","source":"@site/docs/development/starters/oc-studio-starter.md","sourceDirName":"development/starters","slug":"/development/starters/oc-studio-starter","permalink":"/docs/development/starters/oc-studio-starter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"OC Studio Starter"}}');var i=t(4848),o=t(8453);const l={title:"OC Studio Starter"},r=void 0,a={},d=[{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Setup",id:"setup",level:3},{value:"Create a Lex V2 Instance",id:"create-a-lex-v2-instance",level:3},{value:"Deploy",id:"deploy",level:3},{value:"Updating Lex",id:"updating-lex",level:3},{value:"Setting up Chat Widget",id:"setting-up-chat-widget",level:3},{value:"Updating from Template",id:"updating-from-template",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deployed to your environment"}),"\n",(0,i.jsx)(n.li,{children:"Lex V2"}),"\n",(0,i.jsx)(n.li,{children:"Leverages Studio's Content API for Handler & Knowledgebase content"}),"\n",(0,i.jsx)(n.li,{children:"Monorepo"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AWS Account with administrative access"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"instructions",children:"Instructions"}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Clone a copy of ",(0,i.jsx)(n.a,{href:"https://github.com/xapp-ai/oc-studio-starter",children:"https://github.com/xapp-ai/oc-studio-starter"}),' or click "Use this template" on Github']}),"\n",(0,i.jsxs)(n.li,{children:["From project root:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"nvm use"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"yarn install"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"yarn build"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Create a ",(0,i.jsx)(n.code,{children:".env"})," file in ",(0,i.jsx)(n.code,{children:"packages/oc-studio-starter"})," with your APP ID from Studio for the app you are going to deploy.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/development/development-faqs#how-do-i-find-my-application-id",children:"How do you find your application ID?"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"AWS_REGION=us-east-1\nSTUDIO_APP_ID=\nSTUDIO_TOKEN=\nLEX_BOT_ID=\nLEX_BOT_ALIAS_ID=TSTALIASID\nUSER_STORAGE_TABLE=\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Add a ",(0,i.jsx)(n.code,{children:"STUDIO_TOKEN"}),", found in Studio under your app's Developer --\x3e Tokens","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/development/tokens",children:"Tokens"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"create-a-lex-v2-instance",children:"Create a Lex V2 Instance"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a new Lex bot (v2)"}),"\n",(0,i.jsx)(n.li,{children:"When you create a new bot in the console, it automatically adds a Fallback Intent."}),"\n",(0,i.jsxs)(n.li,{children:["Update your .env file with the bot ID: ",(0,i.jsx)(n.code,{children:"LEX_BOT_ID="}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You can find it when you first click on the bot name."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Update your .env file with the alias ID for the TestBotAlias: ",(0,i.jsx)(n.code,{children:"LEX_BOT_ALIAS_ID="}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Within your bot, look under Deployment --\x3e Aliases, then select TestBotAlias"}),"\n",(0,i.jsxs)(n.li,{children:["It should be ",(0,i.jsx)(n.code,{children:"TSTALIASID"})," if you copy and pasted from above, this is a constant."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["You should only have one item left in your ",(0,i.jsx)(n.code,{children:".env"})," not filled out at this point, the ",(0,i.jsx)(n.code,{children:"USER_STORAGE_TABLE"}),", that will be complete after the deployment."]})}),"\n",(0,i.jsx)(n.h3,{id:"deploy",children:"Deploy"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Navigate to the root of the runtime package:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd packages/app\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Set your AWS_PROFILE to one that has necessary credentials to launch the stack:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export AWS_PROFILE=your-profile\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Deploy to your desired stage, either staging or production:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn deploy:prod\n"})}),"\n",(0,i.jsx)(n.p,{children:"A successfull deployment will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn run v1.22.19\n$ rimraf ./lib && yarn build && serverless deploy --stage production\n$ tsc -d true -p .\n\nDeploying studio-runtime to stage production (us-east-1)\nCleaning dependency symlinks\nCreating dependency symlinks\n\n\u2714 Service deployed to stack all-pro-plumbing-app-production (142s)\n\nendpoints:\n  POST - https://{cloudfront-id}.execute-api.us-east-1.amazonaws.com/production/\n  POST - https://{cloudfront-id}.execute-api.us-east-1.amazonaws.com/production/{proxy+}\nfunctions:\n  app: studio-runtime-{appId}-app-production (46 MB)\n\n2 deprecations found: run 'serverless doctor' for more details\n\nMonitor all your API routes with Serverless Console: run \"serverless --console\"\nDone in 152.19s.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Your new endpoint for your assistant application will be under ",(0,i.jsx)(n.code,{children:"endpoints"})," and your main runtime lambda is under ",(0,i.jsx)(n.code,{children:"functions"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The first ",(0,i.jsx)(n.code,{children:"endpoint"})," (without the ",(0,i.jsx)(n.code,{children:"/{proxy+}"}),") is how you can interact with your newly created assistant and is what you will use when you setup chat and search widgets."]}),"\n",(0,i.jsx)(n.h3,{id:"updating-lex",children:"Updating Lex"}),"\n",(0,i.jsx)(n.p,{children:"With the XAPP CLI, push your model to your Lex bot"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"xapp push -p l2 -a {appId} --botName {bot-name}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"setting-up-chat-widget",children:"Setting up Chat Widget"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a chat widget or navigate to an existing chat widget"}),"\n",(0,i.jsx)(n.li,{children:"Click the connection icon from the chat widget menu"}),"\n",(0,i.jsx)(n.li,{children:"Paste the first endpoint URL from the output of your cloudformation script."}),"\n",(0,i.jsx)(n.li,{children:'Make sure you select the checkbox next to "Direct"'}),"\n",(0,i.jsx)(n.li,{children:"Save and test"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"updating-from-template",children:"Updating from Template"}),"\n",(0,i.jsx)(n.p,{children:"We will make updates to the template and you may want to merge them in to your project.  This process is a bit manual but the following will allow you to then manually go through all the changes and accept/reject them."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git remote add template git@github.com:xapp-ai/oc-studio-starter.git\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fetch updates"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git fetch --all\n"})}),"\n",(0,i.jsx)(n.p,{children:"The merge"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git merge template/main --allow-unrelated-histories\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);