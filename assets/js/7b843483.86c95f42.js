"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[3878],{4611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"basics/basics-model","title":"Model Basics","description":"What is the model?","source":"@site/docs/basics/basics-model.mdx","sourceDirName":"basics","slug":"/basics/basics-model","permalink":"/docs/basics/basics-model","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Model Basics","sidebar_label":"Model"},"sidebar":"docs","previous":{"title":"Conversational AI","permalink":"/docs/basics/basics-conversational-ai"},"next":{"title":"Content","permalink":"/docs/basics/basics-content"}}');var i=n(4848),a=n(8453),r=n(3074);const l={title:"Model Basics",sidebar_label:"Model"},o=void 0,d={},c=[{value:"What is the model?",id:"what-is-the-model",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"what-is-the-model",children:"What is the model?"}),"\n",(0,i.jsx)(t.p,{children:"The model, sometimes referred to as the interaction model, is the set of intents and entities that categorize what the user says to that it can then be used within the applications, specifically the dialog manager."}),"\n",(0,i.jsx)(t.p,{children:"The primary building blocks of a model are as follows:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Intent"})," A set of similar utterances, or things the user can say, that individually communicate the same intent"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Slot"})," A defined variable on an utterance within an intent used to capture data from the user"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Entity"})," Help take unstructured data and add structure, either through lists or parsing text to dates or time."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'To illustrate how these components work together to build a model for a particular application, let\'s look at our virtual barista example. The virtual barista will leverage the built-in intents for the common utterances of "yes", "no", "cancel", which are provided by the NLUs. It also needs custom intents & entities specifically for taking coffee orders. Let\'s look at a typical coffee order:'}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:(0,i.jsx)(t.p,{children:"May I have a large cafe au lait?"})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.p,{children:"The important parts of the request are:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Word"}),(0,i.jsx)(t.th,{children:"Meaning"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"large"}),(0,i.jsx)(t.td,{children:"Size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cafe au lait"}),(0,i.jsx)(t.td,{children:"Drink"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"These are the start of two custom entities that will be used throughout your model. Insert slots for these entities in the example above and you have the first sample utterance of a custom Drink Order intent."}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"May I have a ${size} ${drink}?"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"${}"})," notion is used in the above example to define the slot in\nthe utterance where the value inside is the name of the slot. This notation will\nbe used frequently throughout OC Studio to define slots and variables in the assistant's\nresponses."]})}),"\n",(0,i.jsx)(t.p,{children:"The example above is not the only way to express that you would like a drink, it is only one sample utterance of many that will come together to make up an utterance."}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"May I have a ${size} ${drink}?"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"I would like a ${drink}?"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"I would like a ${size} ${drink}?"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"${size} ${drink} please, ${packaging}"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"${size} ${drink} please, ${packaging}"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.p,{children:"Leverage existing transcripts, wizard of oz exercises and simple brain storming to come up with your initial list of sample utterances.  It will the continue to grow and evolve once you start receiving live data."}),"\n",(0,i.jsxs)(t.p,{children:["In the last two samples, you noticed we added an additional slot ",(0,i.jsx)(t.code,{children:"${packaging}"}),' as an opportunity to also capture if they want it "for here" or "to go".  We now have three slots, each with a unique value set called an entity.']}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Slot"}),(0,i.jsx)(t.th,{children:"Entity"}),(0,i.jsx)(t.th,{children:"Values"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"size"}),(0,i.jsx)(t.td,{children:"Size"}),(0,i.jsx)(t.td,{children:"small, medium, large.."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"drink"}),(0,i.jsx)(t.td,{children:"Drink"}),(0,i.jsx)(t.td,{children:"coffee, latte, mocha..."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"packaging"}),(0,i.jsx)(t.td,{children:"Drink Packaging"}),(0,i.jsx)(t.td,{children:"to go, for here"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"These entities can be used multiple times in the same intent (with different slot names) and used across different intents.  They are list of values that tend to be mutually exclusive, a drink cannot be both large and small, and can have synonyms for each value.  Let's take a look at the drink size entity."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Value"}),(0,i.jsx)(t.th,{children:"Synonyms"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"small"}),(0,i.jsx)(t.td,{children:"little, petite.."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"medium"}),(0,i.jsx)(t.td,{children:"average, mid-size..."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"large"}),(0,i.jsx)(t.td,{children:"big, sizeable..."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"While these synonyms are not the most popular values they still will be mapped back to the value and if the user says:"}),"\n",(0,i.jsx)(r.q,{owner:"mine",hasTail:!0,children:"I need a sizeable coffee this morning"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.p,{children:"we will know what they mean."})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3074:(e,t,n)=>{n.d(t,{q:()=>a});var s=n(6540);function i(e){return"others"===e?"m 80 0 v 240 h -60 c 40 -40 60 -160 60 -240":"m 0 0 v 240 h 60 c -40 -40 -60 -160 -60 -240"}var a=function(e){return s.createElement("div",{className:"chat-text-bubble "+("mine"===e.owner?"chat-text-bubble--mine":"chat-text-bubble--others")},e.hasTail&&(t=e.owner,s.createElement("svg",{className:"chat-text-bubble__tail",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 80 240"},s.createElement("path",{d:i(t),fill:"currentColor"}))),e.children);var t}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);