"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[9519],{1102:function(t,n,e){e.r(n),e.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return a}});var o=e(5893),r=e(1151);const s={title:"Conversational Flows"},i=void 0,u={id:"content/flows",title:"Conversational Flows",description:"With both intents and handlers, we can start to build conversational flows.  These are multiturn dialogues that allow you to field more complex queries from users and return relevent information.",source:"@site/docs/content/flows.md",sourceDirName:"content",slug:"/content/flows",permalink:"/docs/content/flows",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Conversational Flows"}},c={},a=[];function l(t){const n={p:"p",...(0,r.a)(),...t.components};return(0,o.jsx)(n.p,{children:"With both intents and handlers, we can start to build conversational flows.  These are multiturn dialogues that allow you to field more complex queries from users and return relevent information."})}function f(t={}){const{wrapper:n}={...(0,r.a)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}},1151:function(t,n,e){e.d(n,{Z:function(){return u},a:function(){return i}});var o=e(7294);const r={},s=o.createContext(r);function i(t){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function u(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),o.createElement(s.Provider,{value:n},t.children)}}}]);