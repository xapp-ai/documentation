"use strict";(self.webpackChunkoc_studio_docs=self.webpackChunkoc_studio_docs||[]).push([[92],{8369:function(n,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l}});var r=a(5893),t=a(1151);const i={title:"GraphQL API"},p=void 0,o={id:"development/api/graphql",title:"GraphQL API",description:"The GraphQL API powers our web application, Studio, and our CLI.  Management of all the resources for an assistant application are done through GraphQL.",source:"@site/docs/development/api/graphql.md",sourceDirName:"development/api",slug:"/development/api/graphql",permalink:"/docs/development/api/graphql",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"GraphQL API"}},s={},l=[{value:"GraphQL",id:"graphql",level:2},{value:"API Documentation",id:"api-documentation",level:2},{value:"Helpful Queries",id:"helpful-queries",level:2},{value:"App Events",id:"app-events",level:3},{value:"App Errors",id:"app-errors",level:3},{value:"Exporting an App",id:"exporting-an-app",level:3},{value:"Importing an App",id:"importing-an-app",level:3},{value:"Creating a New App",id:"creating-a-new-app",level:3},{value:"Uploading PDFs to Knowledgebase",id:"uploading-pdfs-to-knowledgebase",level:3}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["The GraphQL API powers our web application, Studio, and our ",(0,r.jsx)(e.a,{href:"/docs/development/cli",children:"CLI"}),".  Management of all the resources for an assistant application are done through GraphQL."]}),"\n",(0,r.jsx)(e.h2,{id:"graphql",children:"GraphQL"}),"\n",(0,r.jsxs)(e.p,{children:["The API can be found at ",(0,r.jsx)(e.a,{href:"https://api.xapp.ai/graphql",children:"https://api.xapp.ai/graphql"})]}),"\n",(0,r.jsx)(e.p,{children:"Authentication requires adding a header with token:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:'{\n    headers: {\n        "Content-Type": "application/json",\n        "x-xapp-usertoken": token\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:["If you want to programmatically access the API, you can reuse the token used by the ",(0,r.jsx)(e.a,{href:"/docs/development/cli",children:"CLI"}),"'s configuration found at ",(0,r.jsx)(e.code,{children:"~/.xapp/cli_config"})]}),"\n",(0,r.jsx)(e.admonition,{type:"important",children:(0,r.jsx)(e.p,{children:"We currently don't have a way to generate long living machine to machine tokens.  If you want want, please contact your customer support representative."})}),"\n",(0,r.jsx)(e.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,r.jsxs)(e.p,{children:["We provide a GraphiQL based UI within Studio at ",(0,r.jsx)(e.a,{href:"https://studio.xapp.ai/graphql",children:"https://studio.xapp.ai/graphql"}),".  Here you can build and test queries as well as access the documentation."]}),"\n",(0,r.jsx)(e.h2,{id:"helpful-queries",children:"Helpful Queries"}),"\n",(0,r.jsx)(e.h3,{id:"app-events",children:"App Events"}),"\n",(0,r.jsx)(e.p,{children:"All app events can be access through the API and various filters can be applied to get exactly what you want.  Here is a starter query:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:"query events($appId:ID!){\n  app(appId:$appId) {\n    events {\n      total\n      events {\n        userId\n        rawQuery\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"And necessary query variables:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "appId":""\n}\n\n'})}),"\n",(0,r.jsx)(e.h3,{id:"app-errors",children:"App Errors"}),"\n",(0,r.jsx)(e.p,{children:"Stentor has built-in error handling that will capture errors and send them to Studio.  To query them use:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:'query errors($appId:ID!){\n  app(appId:$appId) {\n    events(byType:["ERROR"]) {\n      total\n      events {\n        eventTime\n        sessionId\n        userId\n        channel\n        platform\n        errorCode\n        errorMessage\n        payload\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "appId":""\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:["The above query will give you the 10 most recent errors.  The ",(0,r.jsx)(e.code,{children:"errorMessage"})," contains the error message and the payload is a JSON string that also contains the error message and the stack trace."]}),"\n",(0,r.jsx)(e.h3,{id:"exporting-an-app",children:"Exporting an App"}),"\n",(0,r.jsx)(e.p,{children:"You can programmatically export your application with the following mutation:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:"mutation exportApp($appId:ID!, $organizationId:ID!){\n  app(organizationId:$organizationId) {\n    update(appId:$appId) {\n      exportApp {\n        url\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"And query variables:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "organizationId":"",\n  "appId":""\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"The result will contain a URL that has the content of your requested application in JSON format.  This URL is only available temporarily."}),"\n",(0,r.jsx)(e.h3,{id:"importing-an-app",children:"Importing an App"}),"\n",(0,r.jsx)(e.p,{children:"Using the export format from the above app export mutation, you can then import it to an existing organization."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:"mutation importApp($organizationId: ID!, $appUrl: URL!) {\n  app(organizationId: $organizationId) {\n    importApp(url: $appUrl) {\n       appId\n      organizationId\n      name\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"Variables"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "appUrl": "https://...",\n  "organizationId": ""\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"creating-a-new-app",children:"Creating a New App"}),"\n",(0,r.jsx)(e.p,{children:"You can create a new app with:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:"mutation createApp($input: AppInput) {\n  app {\n    addApp(app:$input){\n      appId\n      organizationId\n      name\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"with variables"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "input":{\n    "name":"Name of New App",\n    "organizationId": "existing-org-id",\n    "templateType": "OC_STUDIO_STARTER_TEMPLATE"\n  }\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:["Where ",(0,r.jsx)(e.code,{children:"name"})," and ",(0,r.jsx)(e.code,{children:"organizationId"})," are the only required input parameters but more can be provided when leveraging this mutation."]}),"\n",(0,r.jsx)(e.h3,{id:"uploading-pdfs-to-knowledgebase",children:"Uploading PDFs to Knowledgebase"}),"\n",(0,r.jsx)(e.p,{children:"This will upload a PDF for a specific appId to the multitenant knowledgebase."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-graphql",children:"mutation addPDF($appId:ID!, $url:URL!, $locationId: String, $makePublic: Boolean){\n  app {\n    update(appId:$appId) {\n      addDocumentToKnowledgebase(url:$url, locationId:$locationId, makePublic:$makePublic)\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"with variables"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "appId": "required",\n  "url":"https://publicly.available.url",\n  "makePublic": true,\n  "locationId": "optional"\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"makePublic"})})]})}function c(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},1151:function(n,e,a){a.d(e,{Z:function(){return o},a:function(){return p}});var r=a(7294);const t={},i=r.createContext(t);function p(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:p(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);